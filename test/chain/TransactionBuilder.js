const assert = require('assert');
const { Apis } = require("echojs-ws");
const { TransactionBuilder } = require("../../index");


describe("ChainStore", () => {
	// Connect once for all tests
	before(function() {
		/* use wss://echo-devnet-node.pixelplex.io/ws if no local node is available */
		return Apis.instance("ws://195.201.164.54:6311", true).init_promise.then(function() {
		});
	});

	after(() => {
		Apis.close();
	});

	it("Transfer", () => {
		let tr = new TransactionBuilder();

		assert.doesNotThrow(function() {
			tr.add_type_operation("transfer", {
				fee: {
					amount: 0,
					asset_id: "1.3.0"
				},
				from: "1.2.1",
				to: "1.2.2",
				amount: { amount: 50000, asset_id: "1.3.0" },
				memo: {
					from: "ECHO1111111111111111111111111111111114T1Anm",
					to: "ECHO1111111111111111111111111111111114T1Anm",
					nonce: 0,
					message: ""
				}
			});
		}, "This transfer should not throw");
	});

	it("Sets core required fees", () => {
		return new Promise((resolve, reject) => {
			let tr = new TransactionBuilder();
			tr.add_type_operation("transfer", {
				fee: {
					amount: 0,
					asset_id: "1.3.0"
				},
				from: "1.2.1",
				to: "1.2.2",
				amount: { amount: 50000, asset_id: "1.3.0" },
				memo: {
					from: "ECHO1111111111111111111111111111111114T1Anm",
					to: "ECHO1111111111111111111111111111111114T1Anm",
					nonce: 0,
					message: ""
				}
			});

			tr.set_required_fees().then(() => {
				assert.equal(tr.operations[0][1].fee.asset_id, "1.3.0");
				assert(tr.operations[0][1].fee.amount > 0);
				resolve();
			}).catch(reject);
		});
	});

	it("Sets required fees", () => {
		return new Promise((resolve, reject) => {
			let tr = new TransactionBuilder();
			tr.add_type_operation("transfer", {
				fee: {
					amount: 0,
					asset_id: "1.3.0"
				},
				from: "1.2.1",
				to: "1.2.2",
				amount: { amount: 50000, asset_id: "1.3.0" },
				memo: {
					from: "ECHO1111111111111111111111111111111114T1Anm",
					to: "ECHO1111111111111111111111111111111114T1Anm",
					nonce: 0,
					message: ""
				}
			});

			tr.set_required_fees().then(() => {
				assert.equal(tr.operations[0][1].fee.asset_id, "1.3.0");
				assert(tr.operations[0][1].fee.amount > 0);
				resolve();
			}).catch(reject);
		});
	});

	it("Asset create standard", () => {
		let tr = new TransactionBuilder();
		let operationJSON = {
			"fee": {
				amount: 0,
				asset_id: 0
			},
			"issuer": "1.2.1",
			"symbol": "TESTTEST",
			"precision": 5,
			"common_options": {
				"max_supply": "10000000000",
				"market_fee_percent": 0,
				"max_market_fee": "0",
				"issuer_permissions": 79,
				"flags": 0,
				"core_exchange_rate": {
					"base": {
						"amount": 100000,
						"asset_id": "1.3.0"
					},
					"quote": {
						"amount": 100000,
						"asset_id": "1.3.1"
					}
				},
				"whitelist_authorities": [

				],
				"blacklist_authorities": [

				],
				"whitelist_markets": [

				],
				"blacklist_markets": [

				],
				"description": JSON.stringify({ main: "", market: "" }),
				"extensions": null
			},
			"is_prediction_market": false,
			"extensions": null
		};

		assert.doesNotThrow(function() {
			tr.add_type_operation("asset_create", operationJSON);
		});
	});

	it("Asset create prediction market", () => {
		let tr = new TransactionBuilder();
		let operationJSON = {
			"fee": {
				amount: 0,
				asset_id: 0
			},
			"issuer": "1.2.1",
			"symbol": "TESTTEST",
			"precision": 5,
			"common_options": {
				"max_supply": "10000000000",
				"market_fee_percent": 2,
				"max_market_fee": "500",
				"issuer_permissions": 79,
				"flags": 0,
				"core_exchange_rate": {
					"base": {
						"amount": 100000,
						"asset_id": "1.3.0"
					},
					"quote": {
						"amount": 100000,
						"asset_id": "1.3.1"
					}
				},
				"whitelist_authorities": [

				],
				"blacklist_authorities": [

				],
				"whitelist_markets": [

				],
				"blacklist_markets": [

				],
				"description": JSON.stringify({ main: "", market: "" }),
				"extensions": null
			},
			bitasset_opts: {
				feed_lifetime_sec: 864000,
				force_settlement_delay_sec: 86400,
				force_settlement_offset_percent: 100,
				maximum_force_settlement_volume: 500,
				minimum_feeds: 7,
				short_backing_asset: "1.3.0"
			},
			"is_prediction_market": true,
			"extensions": null
		};

		assert.doesNotThrow(function() {
			tr.add_type_operation("asset_create", operationJSON);
		});
	});


	it("Contract", () => {
		let tr = new TransactionBuilder();

		assert.doesNotThrow(function() {
			tr.add_type_operation("create_contract", {
				fee: {
					amount: 0,
					asset_id: "1.3.0"
				},
				registrar: "1.2.1",
				value: { amount: 0, asset_id: '1.3.0' },
				code: '606060405260408051908101604052600681527f54726f6e697800000000000000000000000000000000000000000000000000006020820152600090805161004b929160200190610157565b5060408051908101604052600381527f545258000000000000000000000000000000000000000000000000000000000060208201526001908051610093929160200190610157565b506006600281905560006005558054600160a860020a031916905534156100b957600080fd5b604051602080610c66833981016040528080519150505b60068054600160a060020a033381166101000261010060a860020a03199092169190911790915567016345785d8a00006005819055908216600081815260036020526040808220849055919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91905190815260200160405180910390a35b506101f7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019857805160ff19168380011785556101c5565b828001600101855582156101c5579182015b828111156101c55782518255916020019190600101906101aa565b5b506101d29291506101d6565b5090565b6101f491905b808211156101d257600081556001016101dc565b5090565b90565b610a60806102066000396000f300606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d257806307da68f51461015d578063095ea7b31461017257806318160ddd146101a857806323b872dd146101cd578063313ce5671461020957806342966c681461022e57806370a082311461024657806375f12b211461027757806395d89b411461029e578063a9059cbb14610329578063be9a65551461035f578063c47f002714610374578063dd62ed3e146103c7575b600080fd5b34156100dd57600080fd5b6100e56103fe565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101225780820151818401525b602001610109565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016857600080fd5b61017061049c565b005b341561017d57600080fd5b610194600160a060020a03600435166024356104ca565b604051901515815260200160405180910390f35b34156101b357600080fd5b6101bb610593565b60405190815260200160405180910390f35b34156101d857600080fd5b610194600160a060020a0360043581169060243516604435610599565b604051901515815260200160405180910390f35b341561021457600080fd5b6101bb6106cd565b60405190815260200160405180910390f35b341561023957600080fd5b6101706004356106d3565b005b341561025157600080fd5b6101bb600160a060020a036004351661077d565b60405190815260200160405180910390f35b341561028257600080fd5b61019461078f565b604051901515815260200160405180910390f35b34156102a957600080fd5b6100e5610798565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101225780820151818401525b602001610109565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561033457600080fd5b610194600160a060020a0360043516602435610836565b604051901515815260200160405180910390f35b341561036a57600080fd5b610170610916565b005b341561037f57600080fd5b61017060046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061094195505050505050565b005b34156103d257600080fd5b6101bb600160a060020a0360043581169060243516610977565b60405190815260200160405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104945780601f1061046957610100808354040283529160200191610494565b820191906000526020600020905b81548152906001019060200180831161047757829003601f168201915b505050505081565b60065433600160a060020a0390811661010090920416146104b957fe5b6006805460ff191660011790555b5b565b60065460009060ff16156104da57fe5b600160a060020a03331615156104ec57fe5b81158061051c5750600160a060020a03338116600090815260046020908152604080832093871683529290522054155b151561052757600080fd5b600160a060020a03338116600081815260046020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b5b5b92915050565b60055481565b60065460009060ff16156105a957fe5b600160a060020a03331615156105bb57fe5b600160a060020a038416600090815260036020526040902054829010156105e157600080fd5b600160a060020a038316600090815260036020526040902054828101101561060857600080fd5b600160a060020a03808516600090815260046020908152604080832033909416835292905220548290101561063c57600080fd5b600160a060020a03808416600081815260036020908152604080832080548801905588851680845281842080548990039055600483528184203390961684529490915290819020805486900390559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b5b5b9392505050565b60025481565b600160a060020a033316600090815260036020526040902054819010156106f957600080fd5b600160a060020a033316600081815260036020526040808220805485900390558180527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff8054850190559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35b50565b60036020526000908152604090205481565b60065460ff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104945780601f1061046957610100808354040283529160200191610494565b820191906000526020600020905b81548152906001019060200180831161047757829003601f168201915b505050505081565b60065460009060ff161561084657fe5b600160a060020a033316151561085857fe5b600160a060020a0333166000908152600360205260409020548290101561087e57600080fd5b600160a060020a03831660009081526003602052604090205482810110156108a557600080fd5b600160a060020a033381166000818152600360205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b5b5b92915050565b60065433600160a060020a03908116610100909204161461093357fe5b6006805460ff191690555b5b565b60065433600160a060020a03908116610100909204161461095e57fe5b6000818051610971929160200190610994565b505b5b50565b600460209081526000928352604080842090915290825290205481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109d557805160ff1916838001178555610a02565b82800160010185558215610a02579182015b82811115610a025782518255916020019190600101906109e7565b5b50610a0f929150610a13565b5090565b610a3191905b80821115610a0f5760008155600101610a19565b5090565b905600a165627a7a72305820a17a4d0d7c5057421200f6c2edf0f0b8597554f0871e24147362dd783b42d7fc00290000000000000000000000009ea145606c4f694c28cf2a5a021f526a6764e1ba',
				eth_accuracy: false,
				supported_asset_id: '1.3.0',
			});
		}, "This contract should not throw");
	});


	it("Contract Transfer", () => {
		let tr = new TransactionBuilder();

		assert.doesNotThrow(function() {
			tr.add_type_operation("contract_transfer", {
				fee: {
					amount: 0,
					asset_id: "1.3.0"
				},
				from: "1.16.0",
				to: "1.16.1",
				amount: { amount: 50000, asset_id: "1.3.0" },
				// extensions
			});
		}, "This contract transfer should not throw");
	});

});
